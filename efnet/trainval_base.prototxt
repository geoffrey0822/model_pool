name: "EFNet"
layer{
    name: "data"
    type: "Input"
    top: "data"
    input_param{
        shape{
            dim: 64
            dim: 3
            dim: 224
            dim: 224
        }
    }
}
layer{
    name: "label"
    type: "Input"
    top: "label"
    input_param{
        shape{
            dim: 64
            dim: 1
        }
    }
}
layer{
  name: "gain"
  type: "Input"
  top: "gain"
  input_param{
    shape{
      dim: 1
    }
  }
}
layer{
  name: "augmentation"
  type: "Python"
  bottom: "data"
  bottom: "gain"
  top: "augmented"
  python_param{
    module: "augmentlayer"
    layer: "AugmentationLayer"
    param_str: "{'dropout': 0.4,'crop': 1,'coarse_dropout': 1,'flip_lr': 1,'flip_ud': 1,'rot90': 1, 'sigmoid':1, 'gamma': 1}"
  }
}

layer{
    name: "conv1"
    type: "Convolution"
    bottom: "augmented"
    top: "conv1"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output: 32
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu1"
    type: "ReLU"
    bottom: "conv1"
    top: "conv1"
}
layer {
  name: "bn_conv1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats:false
  }
}
layer {
  name: "scale_conv1"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  scale_param {
    bias_term: true
  }
}
layer{
    name: "pool1"
    type: "Pooling"
    bottom: "conv1"
    top: "pool1"
    pooling_param{
        pool: MAX
        kernel_size: 7
        pad: 3
        stride: 2
    }
}
layer{
    name: "conv2"
    type: "Convolution"
    bottom: "pool1" #112
    top: "conv2"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output: 96
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu"
    type: "ReLU"
    bottom: "conv2"
    top: "conv2"
}
layer {
  name: "bn_conv2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats:false
  }
}
layer {
  name: "scale_conv2"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  scale_param {
    bias_term: true
  }
}
layer{
    name: "pool2"
    type: "Pooling"
    bottom: "conv2"
    top: "pool2"
    pooling_param{
        pool: MAX
        kernel_size: 3
        pad: 1
        stride: 2
    }
}
layer{
    name: "conv3"
    type: "Convolution"
    bottom: "pool2" #56
    top: "conv3"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output: 128
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu3"
    type: "ReLU"
    bottom: "conv3"
    top: "conv3"
}
layer {
  name: "bn_conv3"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats:false
  }
}
layer {
  name: "scale_conv3"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  scale_param {
    bias_term: true
  }
}
layer{
    name: "pool3"
    type: "Pooling"
    bottom: "conv3"
    top: "pool3"
    pooling_param{
        pool: MAX
        kernel_size: 3
        pad: 1
        stride: 2
    }
}
layer{
    name: "conv4"
    type: "Convolution"
    bottom: "pool3" #28
    top: "conv4"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output: 256
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu4"
    type: "ReLU"
    bottom: "conv4"
    top: "conv4"
}
layer {
  name: "bn_conv4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats:false
  }
}
layer {
  name: "scale_conv4"
  type: "Scale"
  bottom: "conv4"
  top: "conv4"
  scale_param {
    bias_term: true
  }
}
layer{
    name: "pool4"
    type: "Pooling"
    bottom: "conv4"
    top: "pool4"
    pooling_param{
        pool: MAX
        kernel_size: 3
        pad: 1
        stride: 2
    }
}
layer{
    name: "conv5"
    type: "Convolution"
    bottom: "pool4" #14
    top: "conv5"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 1
        decay_mult: 0
    }
    convolution_param{
        num_output: 512
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu5"
    type: "ReLU"
    bottom: "conv5"
    top: "conv5"
}
layer {
  name: "bn_conv5"
  type: "BatchNorm"
  bottom: "conv5"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    use_global_stats:false
  }
}
layer {
  name: "scale_conv5"
  type: "Scale"
  bottom: "conv5"
  top: "conv5"
  scale_param {
    bias_term: true
  }
}
layer{
    name: "pool5"
    type: "Pooling"
    bottom: "conv5"
    top: "pool5"
    pooling_param{
        kernel_size: 3
        pad: 1
        stride: 2
    }
}
layer{
    name: "conv6"
    type: "Convolution"
    bottom: "pool5"
    top: "conv6"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output:1024
        kernel_size: 3
        pad: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "relu6"
    type: "ReLU"
    bottom: "conv6"
    top: "conv6"
}
layer{
    name: "pool6"
    type: "Pooling"
    bottom: "conv6"
    top: "pool6"
    pooling_param{
        pool: MAX
        kernel_size: 3
        pad: 1
        stride: 2
    }
}
layer{
    name: "class_conv1"
    type: "Convolution"
    bottom: "pool6" #7
    top: "class_conv1"
    param{
        lr_mult: 1
        decay_mult: 1
    }
    param{
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param{
        num_output: 10
        kernel_size: 1
        weight_filler{
            type: "msra"
        }
        bias_filler{
            type: "constant"
            value: 0
        }
    }
}
layer{
    name: "class_relu1"
    type: "ReLU"
    bottom: "class_conv1"
    top: "class_conv1"
}
layer{
    name: "class_pool1"
    type: "Pooling"
    bottom: "class_conv1"
    top: "class_pool1"
    pooling_param{
        pool: AVE
        kernel_size: 5
    }
}
layer{
    name: "loss"
    type: "SoftmaxWithLoss"
    bottom: "class_pool1"
    bottom: "label"
    top: "loss-1"
}
layer{
    name: "accuracy"
    type: "Accuracy"
    bottom: "class_pool1"
    bottom: "label"
    top: "top-1"
}